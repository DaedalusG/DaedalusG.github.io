{"version":3,"sources":["webpack:///./src/components/project-card.js","webpack:///./src/components/headshot.js","webpack:///./src/pages/index.js"],"names":["ProjectCard","title","description","technologies","imageData","live","github","className","href","fluid","alt","map","technology","target","rel","Headshot","data","useStaticQuery","placeholderImage","childImageSharp","IndexPage","projects","allProjectsJson","edges","allFile","image","node","project"],"mappings":"6FAAA,wDAsDeA,IAjDK,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACtE,OACI,qCACI,yBAAKC,UAAU,iBACX,wBAAIA,UAAU,wBAAwBN,GACtC,yBAAKM,UAAU,mBACX,uBAAGC,KAAI,GAAKH,GACR,kBAAC,IAAD,CAAKI,MAAOL,EAAWM,IAAKT,MAGpC,yBAAKM,UAAU,oBACVJ,EAAaQ,KAAI,SAACC,GACf,OACI,4BAAKA,QAKrB,yBAAKL,UAAU,oBACX,wBAAIA,UAAU,yBAAyBN,GACvC,yBAAKM,UAAU,mBACVJ,EAAaQ,KAAI,SAACC,GACf,OACI,4BAAKA,OAIjB,uBAAGL,UAAU,uBAAuBL,GACpC,6BACI,uBACIM,KAAI,GAAKF,EACTO,OAAQ,SACRC,IAAK,uBAHT,iBAOA,uBACIN,KAAI,GAAKH,EACTQ,OAAQ,SACRC,IAAK,uBAHT,oB,kJCXLC,EA1BE,WAAO,IAAD,IACfC,EAAOC,yBAAe,cAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,OAAC,EAAyCV,MAK5C,kBAAC,IAAD,CACEA,MAAOO,EAAKE,iBAAiBC,gBAAgBV,MAC7CC,IAAI,aANC,mD,sBC4FIU,UAlGG,WAEhB,IAAMJ,EAAOC,yBAAe,cAoCtBI,EAAWL,EAAKM,gBAAgBC,MAChCpB,EAAea,EAAKQ,QAAQD,MAElC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKtB,MAAM,qBAAqBwB,MAAK,6BACrC,kCACE,wBAAIlB,UAAU,kBAAd,4BACA,yBAAKA,UAAU,cACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,mBAAd,4BACA,yHACA,uBAAGA,UAAU,gBAAb,2IACA,sDAA2B,uBAAGC,KAAM,gEAAT,YAA3B,oBAAiI,uBAAGA,KAAM,iCAAT,SAAjI,OAGJ,wBAAID,UAAU,yBAAd,0BACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,0BAAd,sCACA,sNAEF,yBAAKA,UAAU,cACZJ,EAAaQ,KAAI,YAA2B,IACrCP,EADoC,EAAvBsB,KACUP,gBAAgBV,MAC7C,OACE,yBAAKF,UAAU,UACb,kBAAC,IAAD,CAAKE,MAAOL,SAKpB,uBAAGG,UAAU,oBAAb,4LAEF,wBAAIA,UAAU,aAAd,sCACCc,EAASV,KAAI,YAAwB,IAAfgB,EAAc,EAApBD,KACTzB,EAAQ0B,EAAQ1B,MAChBC,EAAcyB,EAAQzB,YACtBG,EAAOsB,EAAQtB,KACfC,EAASqB,EAAQrB,OACjBH,EAAewB,EAAQxB,aACvBC,EAAYuB,EAAQF,MAAMN,gBAAgBV,MAChD,OACE,kBAAC,IAAD,CACER,MAAOA,EACPC,YAAaA,EACbC,aAAcA,EACdC,UAAWA,EACXC,KAAMA,EACNC,OAAQA,U","file":"component---src-pages-index-js-69574e0b37e5f5c819b5.js","sourcesContent":["import React from 'react';\nimport Img from 'gatsby-image';\n\nimport './styles/project-card.css';\n\nconst ProjectCard = ({ title, description, technologies, imageData, live, github }) => {\n    return (\n        <projectcard>\n            <div className=\"project-scene\">\n                <h1 className=\"mobile-project-title\">{title}</h1>\n                <div className=\"image-container\">\n                    <a href={`${live}`}>\n                        <Img fluid={imageData} alt={title} />\n                    </a>\n                </div>\n                <div className=\"desktop-techused\">\n                    {technologies.map((technology) => {\n                        return (\n                            <h5>{technology}</h5>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"projectcard-info\">\n                <h1 className=\"desktop-project-title\">{title}</h1>\n                <div className=\"mobile-techused\">\n                    {technologies.map((technology) => {\n                        return (\n                            <h5>{technology}</h5>\n                        )\n                    })}\n                </div>\n                <p className=\"project-description\">{description}</p>\n                <div>\n                    <a\n                        href={`${github}`}\n                        target={\"_blank\"}\n                        rel={\"noopener noreferrer\"}\n                    >\n                        GitHub Repo &rarr;\n                        </a>\n                    <a\n                        href={`${live}`}\n                        target={\"_blank\"}\n                        rel={\"noopener noreferrer\"}\n                    >\n                        Live Site &rarr;\n                        </a>\n                </div>\n            </div>\n        </projectcard>\n    )\n}\n\nexport default ProjectCard","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Headshot = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"headshot.jpg\" }) {\n        childImageSharp {\n          fluid (maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\n    return <div>Picture not found</div>\n  }\n\n  return (\n    <Img\n      fluid={data.placeholderImage.childImageSharp.fluid}\n      alt='headshot'\n    />\n  )\n\n}\n\nexport default Headshot","import React from \"react\"\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from \"gatsby-image\";\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Headshot from \"../components/headshot\"\nimport ProjectCard from \"../components/project-card\"\n\n\nimport \"./index.css\"\n\nconst IndexPage = () => {\n\n  const data = useStaticQuery(graphql`\n      {\n        allFile(filter: {extension: {regex: \"/(jpg)|(png)|(jpeg)/\"}, relativeDirectory: {eq: \"technologies\"}}) {\n          edges {\n            node {\n              base\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n        allProjectsJson {\n          edges {\n            node {\n              title\n              slug\n              live\n              github\n              description\n              technologies\n              image {\n                childImageSharp {\n                  fluid {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      `);\n\n  const projects = data.allProjectsJson.edges;\n  const technologies = data.allFile.edges;\n\n  return (\n    <Layout>\n      <SEO title=\"Warren's Portfolio\" image={`../../image/headshot.jpg`} />\n      <greeting>\n        <h1 className=\"mobile-welcome\">Welcome to my portfolio!</h1>\n        <div className=\"headshot-c\">\n          <Headshot />\n        </div>\n        <div className=\"greeting-info\">\n          <h1 className=\"desktop-welcome\">Welcome to my portfolio!</h1>\n          <p>My name is Warren, I write code, research new technologies, and hangout with my dog Bajor.</p>\n          <p className=\"desktop-info\">Here you can access links to my projects, and learn a little bit about my interests and background. This site was developed with Gatsby</p>\n          <p>Get in touch with me on <a href={\"https://www.linkedin.com/in/warren-gifford-he-him-b1141a1b4/\"}>LinkedIn</a>, or shoot me an <a href={\"mailto:warrenbruceg@gmail.com\"}>email</a>.</p>\n        </div>\n      </greeting>\n      <h2 className='mobile-tech-direction'>Behold my technologies</h2>\n      <div className=\"technologies\">\n        <div className=\"desktop-tech-info\">\n          <h2 className=\"desktop-tech-direction\">What I Know, and what I'm Learning</h2>\n          <p>Currently I get excited about deFi, NLP, progressive web apps, infosec, and pretty much everything else. I'm learning more all the time, and if you want you can keep up with me here.</p>\n        </div>\n        <div className=\"tech-icons\">\n          {technologies.map(({ node: technology }) => {\n            const imageData = technology.childImageSharp.fluid;\n            return (\n              <div className='logo-c'>\n                <Img fluid={imageData} />\n              </div>\n            )\n          })}\n        </div>\n        <p className=\"mobile-tech-info\">Currently I get excited about deFi, NLP, progressive web apps, infosec, and pretty much everything else. I'm learning more all the time, and if you want you can keep up with me here. </p>\n      </div>\n      <h2 className=\"direction\">See my most recent projects below </h2>\n      {projects.map(({ node: project }) => {\n        const title = project.title;\n        const description = project.description;\n        const live = project.live;\n        const github = project.github;\n        const technologies = project.technologies\n        const imageData = project.image.childImageSharp.fluid;\n        return (\n          <ProjectCard\n            title={title}\n            description={description}\n            technologies={technologies}\n            imageData={imageData}\n            live={live}\n            github={github}\n          />\n\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}